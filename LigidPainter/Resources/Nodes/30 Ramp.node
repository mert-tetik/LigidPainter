# For ligidtools.com
# Node extension v1.0

%attributes;

-title : Noise;
-color : hex4287f5; #rgb122,124,66  #hsv86,45,23
-opacity : 60;

-input_0 : 
--list : none;
--list_index : none;
--type : float;
--title : Fac;
--element : ramp;
--value : 100;

-output_0 :
--list : none;
--list_index : none;
--type : vec3;
--title : Color;

-uniforms : tex_coords|normal|posScene|posModel;

%code;

uniform float point1D[10];
uniform vec3 color1D[10];

vec3 getGradient(vec2 uv)
{
    vec3 clr1 = vec3(0,0,0);
    vec3 clr2 = vec3(0,0,0);
    
    float co1 = 1.;
    float co2 = 0.;
    
    float minVal = 1.;
    vec3 minI;
    float maxVal = 0.;
    vec3 maxI;
    for(int i = 0; i < 10;i++){
        if(point1D[i] < 2. && point1D[i] > 0.01){
            if(minVal > point1D[i]){
                minVal = point1D[i];
                minI = color1D[i]/255.;
            }
            if(maxVal < point1D[i]){
                maxVal = point1D[i];
                maxI = color1D[i]/255.;
            }
            if(co1 > point1D[i] && uv.y < point1D[i]){//Smaller
                co1 = point1D[i];
                clr1 = color1D[i]/255.;
        
            }
            if(co2 < point1D[i] && uv.y > point1D[i]){//Bigger
                co2 = point1D[i];        
                clr2 = color1D[i]/255.;
            }
        }
    }


    float coDiff = co2-co1;
    return mix(clr1,clr2,(uv.y-co1)/coDiff);
}
void main()
{
    float fac = texture(input_0,tex_coords).r;
    vec2 uv = tex_coords;
    
    vec3 grad = getGradient(vec2(fac));

    // Output to screen
    output_0 = vec4(grad,1.0);
}