# For ligidtools.com
# Node extension v1.0

%attributes;

-list_0 :
--title_0 : Red;
--title_1 : None;

-list_1 :
--title_0 : Orange;
--title_1 : None;

-list_2 :
--title_0 : Yellow;
--title_1 : None;

-list_3 :
--title_0 : Green;
--title_1 : None;

-list_4 :
--title_0 : Cyan;
--title_1 : None;

-list_5 :
--title_0 : Blue;
--title_1 : None;

-list_6 :
--title_0 : Pink;
--title_1 : None;

-list_7 :
--title_0 : White;
--title_1 : None;

-list_8 :
--title_0 : None;
--title_1 : Black;

-title : Color Id;
-color : hexb74efc; #rgb122,124,66  #hsv86,45,23
-opacity : 60;


-input_0 : 
--list : none;
--list_index : none;
--type : vec3;
--title : Color ID;
--element : color;
--value : 100,100,100;

-output_0 :
--list : none;
--list_index : none;
--type : vec3;
--title : Color;


-uniforms : tex_coords|normal|posScene|posModel;

%code;

bool arnd(float val,float min,float max){
    return val >= min && val <= max;
}
vec3 RGBToHSVGenerator(vec3 rgbData){
	float maxV = max(max(rgbData.r,rgbData.g),rgbData.b);
	float minV = min(min(rgbData.r,rgbData.g),rgbData.b);
	float hue;
	float saturation;
	float value;

	value = maxV/255.0;
	if(maxV > 0){
		saturation = 1.0f - float(minV)/float(maxV);
	}
	else if(maxV == 0){
		saturation = 0;
	}
    if (maxV == rgbData.r) {
        hue = (rgbData.g - rgbData.b) / (maxV - minV);

    } else if (maxV == rgbData.g) {
        hue = 2.0f + (rgbData.b - rgbData.r) / (maxV - minV);

    } else {
        hue = 4.0f + (rgbData.r - rgbData.g) / (maxV - minV);
    }
    hue = hue * 60.0;
    if (hue < 0){
		hue = hue + 360.0;	
	} 
	
	if (minV == maxV) {
        hue = 0;
    }
	vec3 hsvVal = vec3(round(hue),saturation,value);
	return hsvVal;
}
void main()
{
    vec3 source = texture(input_0,tex_coords).rgb;
   
    vec3 hsv = RGBToHSVGenerator(source*255);

    vec3 res;
    
    if(list_0== 0 && (arnd(hsv.r,0,15) || arnd(hsv.r,345,360)) && hsv.g > 0.5) //Red
        res = vec3(source.r);

    else if(list_3== 0 && arnd(hsv.r,75,150) && hsv.g > 0.5) //Green
        res = vec3(source.g);
 
    else if(list_5== 0 && arnd(hsv.r,210,260) && hsv.g > 0.5) //Blue
        res = vec3(source.b);

    else if(list_2== 0 && arnd(hsv.r,50,65) && hsv.g > 0.5) //Yellow
        res = vec3((source.r+source.g)/2.);

    else if(list_6== 0 && arnd(hsv.r,280,340) && hsv.g > 0.5) //Pink
        res = vec3((source.r+source.b)/2.);
    
    else if(list_4== 0 && arnd(hsv.r,170,180) && hsv.g > 0.5) //Cyan
        res = vec3((source.b+source.g)/2.);

    else if(list_1== 0 && arnd(hsv.r,25,40) && hsv.g > 0.5) //Orange
        res = vec3((source.r+source.g)/2.);

    if(list_7== 0 && hsv.b > 0.1 && hsv.g < 0.1) //White
        res = vec3(source.r);

    if(list_8== 1 && hsv.b < 0.1 && hsv.g < 0.1) //Black
        res = vec3(1-source.r);
	

    output_0 = vec4(res,1.0);
}