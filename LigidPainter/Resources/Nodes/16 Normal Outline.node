# For ligidtools.com
# Node extension v1.0

%attributes;

-title : Outlines;
-color : hexf72d4b; #rgb122,124,66  #hsv86,45,23
-opacity : 60;

-input_0 : 
--list : none;
--list_index : none;
--type : vec3;
--title : Color;
--element : color;
--value : 100,100,100;

-input_1 : 
--list : none;
--list_index : none;
--type : float;
--title : Range;
--element : range;
--value : 100;

-input_2 : 
--list : none;
--list_index : none;
--type : float;
--title : Value Treshold;
--element : range;
--value : 100;

-output_0 :
--list : none;
--list_index : none;
--type : vec3;
--title : Texture;


-uniforms : tex_coords|normal|posScene|posModel;

%code;

bool isFlat(vec3 val,float tH){
    if(val.r > 0.5-tH && val.r < 0.5+tH){
        if(val.g > 0.49-tH && val.r < 0.49+tH){
            if(val.b > 0.49-tH)
            return true;
        }
    }
    return false;
}

void main(){
    //Brush indicator here
    vec3 t = max(texture(input_0, tex_coords),0.0).rgb;
    float th = max(texture(input_2, tex_coords),0.0).r/2+0.01;

    float thickness = texture(input_1, tex_coords).r/50.;
    
    vec3 tL = max(texture(input_0, tex_coords - vec2(thickness,0)),0.0).rgb;
    vec3 tR = max(texture(input_0, tex_coords + vec2(thickness,0)),0.0).rgb;
    vec3 tT = max(texture(input_0, tex_coords - vec2(0,thickness)),0.0).rgb;
    vec3 tB = max(texture(input_0, tex_coords + vec2(0,thickness)),0.0).rgb;
    
    float res = 0;

    if(isFlat(t,th)){
        if(isFlat(tL,th) || isFlat(tR,th) || isFlat(tT,th) || isFlat(tB,th))
            res = 1.0;
    }

    output_0 = vec4(vec3(res),1); 
}